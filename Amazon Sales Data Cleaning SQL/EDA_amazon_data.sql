SELECT *
FROM amazon_sales_data.staged_cleaned_data;


-- 1. Customer Behavior
-- What is the total revenue generated by each city?
-- Which customer (based on Order ID) made the highest purchase (total price)?
-- What is the most popular product based on the number of orders?
-- Which city has the highest average order value?
-- What is the average quantity ordered per product?


-------------------------------------------------------------------------------------

-- 1 HOW MANY CUSTOMERS PLACED ORDER BY MONTH
-- What is the total revenue generated by each city?

SELECT City, SUM(`Quantity Ordered`*`Price Each`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY City;

-- Which customer (based on Order ID) made the highest purchase (total price)?
SELECT DISTINCT(`Order ID`), SUM(`Quantity Ordered`*`Price Each`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY `Order ID`
ORDER BY SUM(`Quantity Ordered`*`Price Each`) DESC;

-- What is the most popular product based on the number of orders?
SELECT Product, SUM(`Quantity Ordered`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Product;

------------------------------------------------------------------
-- 2. Sales Trends
-- What are the total sales (revenue) for each product?
-- Which product contributes the most to total revenue?
-- What is the distribution of sales by hour of the day?
-- Which city has the highest number of orders placed in the evening (5 PM–9 PM)?
-- What is the trend of sales over different days of the month?

--------------------------------------------------------------------------
-- 2. SALES TREND
-- What are the total sales (revenue) for each product?
SELECT Product, SUM(`Quantity Ordered`*`Price Each`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Product;

-- Which product contributes the most to total revenue?
SELECT Product, SUM(`Quantity Ordered`*`Price Each`) revenue
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Product
ORDER BY revenue desc
LIMIT 1;

-- What is the distribution of sales by hour of the day?
SELECT SUM(`Quantity Ordered`*`Price Each`), HOUR(`Order Date`) Hour_day, COUNT(*)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Hour_day
ORDER BY Hour_day desc;

-- Which city has the highest number of orders placed in the evening (5 PM–9 PM)?
WITH city_evening AS (
SELECT City, COUNT(`Quantity Ordered`), HOUR(`Order Date`) Hour_day
FROM amazon_sales_data.staged_cleaned_data
GROUP BY City, Hour_day
)

SELECT *
FROM city_evening
WHERE Hour_day between 17 and 21
;

-- What is the trend of sales over different days of the month?
SELECT 
    DAY(`Order Date`) AS DayOfMonth, 
    SUM(`Quantity Ordered` * `Price Each`) AS TotalSales,
    COUNT(*) AS OrderCount
FROM 
    amazon_sales_data.staged_cleaned_data
GROUP BY 
    DayOfMonth
ORDER BY 
    DayOfMonth;
 
 ------------------------------------------------------------
 
-- 3. PRODUCT PERFORMANCE
-- Which product had the lowest total revenue?
-- What is the revenue contribution percentage of each product?
-- What is the total revenue for products sold in bulk (Quantity Ordered > 1)?
-- Which product is most frequently sold with a specific other product (e.g., Cable with Batteries)?
-- Which product has the most price variation?


-- 3. PRODUCT PERFORMANCE
-- Which product had the lowest total revenue?
SELECT Product, SUM(`Quantity Ordered` * `Price Each`) rev
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Product
ORDER BY rev asc
limit 1;

-- What is the revenue contribution percentage of each product?
WITH total_rev AS (
SELECT SUM(`Quantity Ordered` * `Price Each`) rev
FROM amazon_sales_data.staged_cleaned_data
),
prod_rev AS(
SELECT Product, SUM(`Quantity Ordered` * `Price Each`) prodrev
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Product
)

select pr.product, pr.prodrev,ROUND((pr.prodrev / tr.rev) * 100, 2) AS RevenuePercentage
FROM 
    prod_rev pr
JOIN 
    total_rev tr
ON 
    1 = 1 -- Join to access the total revenue
ORDER BY 
    RevenuePercentage DESC;
    
    -- ANOTHER WAY OF QUERYING THIS
    
    WITH TotalRevenue AS (
    SELECT 
        SUM(`Quantity Ordered` * `Price Each`) AS TotalRevenue
    FROM 
        amazon_sales_data.staged_cleaned_data
        )
        
	SELECT Product, SUM(`Quantity Ordered` * `Price Each`) AS ProductRevenue,
		ROUND((SUM(`Quantity Ordered` * `Price Each`) / TotalRevenue) * 100, 2) AS RevenuePercentage
	FROM 
    amazon_sales_data.staged_cleaned_data, TotalRevenue
GROUP BY 
    Product, TotalRevenue
ORDER BY 
    RevenuePercentage DESC;

-- What is the total revenue for products sold in bulk (Quantity Ordered > 1)?
SELECT Product, SUM(`Quantity Ordered` * `Price Each`), `Quantity Ordered`
FROM amazon_sales_data.staged_cleaned_data
WHERE `Quantity Ordered` > 1
GROUP BY Product, `Quantity Ordered`;


-- Which product is most frequently sold with a specific other product (e.g., Cable with Batteries)?

WITH ProductPairs AS (
    -- Select all combinations of products within the same Order ID
    SELECT 
        o1.Product AS Product1,
        o2.Product AS Product2,
        COUNT(*) AS PairFrequency
    FROM 
        amazon_sales_data.staged_cleaned_data o1
    JOIN 
        amazon_sales_data.staged_cleaned_data o2
    ON 
        o1.`Order ID` = o2.`Order ID` 
        AND o1.Product != o2.Product  -- Avoid pairing the product with itself
    WHERE 
        o1.Product = 'Cable' -- Specify the product to analyze (Cable)
    GROUP BY 
        o1.Product, o2.Product
)
-- Get the most frequently sold pair
SELECT 
    Product1 AS MainProduct, 
    Product2 AS AssociatedProduct, 
    PairFrequency
FROM 
    ProductPairs
ORDER BY 
    PairFrequency DESC
LIMIT 1;

--------------------------------------------------------------------------------------------------------------
-- 4. Time-Based Insights
-- What is the busiest day of the week for orders?
-- What is the total revenue generated during weekends versus weekdays?
-- How does sales performance vary across different months (if applicable)?
-- What is the average order value for orders placed in the morning (8 AM–12 PM)?
-- What is the most common time of day for orders in each city?
--------------------------------------------------------------------------------------------------------------
-- 4. Time-Based Insights
-- What is the busiest day of the week for orders?
SELECT COUNT(`Quantity Ordered`), DAYNAME(`Order Date`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY DAYNAME(`Order Date`), DAYOFWEEK(`Order Date`)
ORDER BY DAYOFWEEK(`Order Date`);

-- What is the total revenue generated during weekends versus weekdays?

SELECT 
	CASE
		WHEN DAYOFWEEK(`Order Date`) IN (1,7) THEN 'Weekend'
        ELSE 'Weekday'
	END AS Daytype,
SUM(`Quantity Ordered` * `Price Each`) AS Total_revenue
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Daytype
ORDER BY Daytype; 

-- How does sales performance vary across different months (if applicable)?

WITH monthly_rev AS (
	SELECT 
		MONTHNAME(`Order Date`) AS Month_name,
		SUM(`Quantity Ordered` * `Price Each`) AS Revenue,
        COUNT(*) Total_orders,
        MONTH(`Order Date`) Month_number
	FROM amazon_sales_data.staged_cleaned_data
    GROUP BY MONTHNAME(`Order Date`), MONTH(`Order Date`)
		)
SELECT Month_name, Total_orders, Revenue
FROM monthly_rev
ORDER BY Month_number;
	-- FIELD(Month_number, 1,2,3,4,5,6,7,8,9,10,11,12);

-- What is the average order value for orders placed in the morning (8 AM–12 PM)?
SELECT AVG(`Quantity Ordered`)
FROM amazon_sales_data.staged_cleaned_data
WHERE HOUR(`Order Date`) BETWEEN 8 AND 12
;
-------------------------------------------------------------------------------------
-- 5. Advanced Analysis
-- What is the correlation between product price and quantity ordered?
-- What percentage of total revenue comes from the top 3 cities?
-- What is the average revenue generated per unique customer?
-- Which city has the largest variety of products ordered?
-- Which products are underperforming based on both quantity ordered and revenue?

------------------------------------------------------------------------------------
-- 5. Advanced Analysis
--  What percentage of total revenue comes from the top 3 cities?

WITH rev_cent AS (
	SELECT SUM(`Quantity Ordered` * `Price Each`) total_rev
    FROM amazon_sales_data.staged_cleaned_data
		)
        
SELECT SUM(`Quantity Ordered` * `Price Each`)/total_rev*100 Percent_rev, City
FROM amazon_sales_data.staged_cleaned_data,rev_cent
GROUP BY City, total_rev
ORDER BY Percent_rev desc
LIMIT 3;

-- Which products are underperforming based on both quantity ordered and revenue?
WITH low_sales AS (
	SELECT Product, SUM(`Quantity Ordered`) total_order
    FROM amazon_sales_data.staged_cleaned_data
    GROUP BY Product
	)
    
SELECT *
FROM low_sales;


SELECT COUNT(`Order ID`) No_customers, MONTHNAME(`Order Date`) `Month`
FROM amazon_sales_data.staged_cleaned_data
GROUP BY MONTHNAME(`Order Date`)
ORDER BY COUNT(`Order ID`) DESC
;


DELETE FROM amazon_sales_data.staged_cleaned_data
WHERE YEAR(`Order Date`)= 2020;


-- 2 Highest selling month
-- 3 Lowest selling month
WITH monthly_rev AS (
SELECT *,(`Quantity Ordered`*`Price Each`) AS rev_month
FROM amazon_sales_data.staged_cleaned_data

)
SELECT SUM(rev_month) revenue_month, MONTHNAME(`Order Date`) `Month`
FROM monthly_rev
GROUP BY MONTHNAME(`Order Date`)
ORDER BY SUM(rev_month) desc
LIMIT 1;

-- 4 Product and city which influenced the highest selling month; reason why? 
-- 5 Product and city which influenced the lowest selling month; reasons why?

WITH monthly_rev AS (
SELECT *,(`Quantity Ordered`*`Price Each`) AS rev_month
FROM amazon_sales_data.staged_cleaned_data
-- ORDER BY rev_month desc
)
SELECT SUM(rev_month) revenue_month, MONTH(`Order Date`) `Month`, Product, City
FROM monthly_rev
GROUP BY MONTH(`Order Date`), Product, City
ORDER BY revenue_month ASC
;

-- 6 Product with lowest and maximum unit price
SELECT Product,MAX(`Price Each`), MIN(`Price Each`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Product;
-- ORDER BY ;

-- 7 Revenue generated for the year 2019
SELECT SUM(`Quantity Ordered`*`Price Each`) AS rev_month, YEAR(`Order Date`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY YEAR(`Order Date`);

-- 8 Product with the highest order id based on qunatity ordered
SELECT Product, COUNT(`Order ID`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY Product;

-- What is the total revenue generated by each city?

SELECT SUM(`Quantity Ordered`*`Price Each`) AS rev_month, City
FROM amazon_sales_data.staged_cleaned_data
GROUP BY City;


-- Which customer (based on Order ID) made the highest purchase (total price)?
SELECT DISTINCT(`Order ID`), MAX(`Quantity Ordered`),SUM(`Quantity Ordered`*`Price Each`)
FROM amazon_sales_data.staged_cleaned_data
GROUP BY `Order ID`
ORDER BY SUM(`Quantity Ordered`*`Price Each`) DESC;